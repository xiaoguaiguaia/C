#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#define ROW 9
#define COL 9
#define ROWS ROW+2
#define COLS COL+2
#define COUNT 10
void menu()
{
    printf("***************************\n");
    printf("****  1.play   0.exit  ****\n");
    printf("***************************\n");
}
void InitBoard(char board[ROWS][COLS],int rows,int cols,char set)
{
    int i = 0;
    int j = 0;
    for (i=0;i<rows;i++)
    {
        for (j=0;j<cols;j++)
        {
            board[i][j] = set;
        }
    }
}
void DisplayBoard(char board[ROWS][COLS],int row,int col)
{
    int i = 0;
    int j = 0;
    for (i=0;i<=row;i++)
    {
        printf("%d ",i);
    }
    printf("\n");
    for (i=1;i<=row;i++)
    {
        printf("%d ",i);
        for (j=1;j<=col;j++)
        {
            printf("%c ",board[i][j]);
        }
        printf("\n");
    }
}
void SetMine(char board[ROWS][COLS],int row,int col)
{
    int count = COUNT;//雷的个数
    while (count)
    {
        int x = rand()%row+1;
        int y = rand()%col+1;
        if (board[x][y] == '0')
        {
            board[x][y] = '1';
            count--;
        }
    }
}
int get_mine_count(char mine[ROWS][COLS],int x,int y)
{
    return mine[x-1][y-1]+mine[x-1][y]+mine[x-1][y+1]+mine[x][y-1]+mine[x][y+1]+mine[x+1][y-1]+mine[x+1][y]+mine[x+1][y+1]-8*'0';
}
void FindMine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col)
{
    int x = 0;
    int y = 0;
    int win = 0;
    while (row*col-win>COUNT)
    {
        printf("请输入排查雷的坐标:>");
        scanf("%d%d",&x,&y);
        if (x>=1 && x<=row && y>=1 && y<=col)//判断坐标是否合法
        {
            //1.踩雷
            if (mine[x][y] == '1')
            {
                DisplayBoard(mine,row,col);
                printf("踩雷，游戏结束!\n");
                break;
            }
            else//2.排雷
            {
                int count = get_mine_count(mine,x,y);
                show[x][y] = count+'0';
                DisplayBoard(show,row,col);
                win++;
            }
        }
        else
        {
            printf("坐标非法，请重新输入!\n");
        }
    }
    if (row*col-win==COUNT)
    {
        printf("恭喜你赢了!\n");
        DisplayBoard(mine,row,col);
    }
}
void game()
{
    printf("扫雷游戏\n");
    //存储雷的信息
    char mine[ROWS][COLS] = {0};//布置好的雷的信息
    char show[ROWS][COLS] = {0};//排查出的雷的信息
    InitBoard(mine,ROWS,COLS,'0');//初始化
    InitBoard(show,ROWS,COLS,'*');
    //DisplayBoard(mine,ROW,COL);//打印
    DisplayBoard(show,ROW,COL);
    SetMine(mine,ROW,COL);//设置雷
    //DisplayBoard(mine,ROW,COL);
    FindMine(mine,show,ROW,COL);//排雷
}
void test()
{
    srand((unsigned int)time(NULL));
    int input = 0;
    do {
        menu();
        printf("请选择:>");
        scanf("%d",&input);
        switch (input) {
            case 1:
                game();
                break;
            case 0:
                break;
            default:
                printf("输入错误，请重新输入!\n");
                break;
        }
    }
    while (input);
}
int main()
{
    test();
    return 0;
}
